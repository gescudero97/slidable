---
description: Rules for Cursor as a Senior Game Developer (ThreeJS, Node.js, Socket.IO)
globs: 
alwaysApply: false
---
These rules guide the AI in coding the single-player game, emphasizing performance, modularity, and gameplay focus:

Maintain Modularity
Split code into separate modules (e.g., rendering, physics, controls, UI) for clarity and maintainability.
Avoid large, tangled files.
Optimize Performance
Target a minimum of 30 FPS on mid-range devices using efficient ThreeJS practices (e.g., BufferGeometry).
Minimize resource usage for smooth gameplay.
Ensure Responsive Inputs
Process keyboard events promptly to make steering and speed controls feel immediate and natural.
Simplify Collision Detection
Use basic bounding box checks for obstacles and race markers (start/finish lines).
Keep it lightweight and accurate.
Streamline Game State
Use a clear state system (e.g., pre-race, racing, finished) to manage game flow logically.
Focus on Core Gameplay
Prioritize flying mechanics, timer functionality, and obstacle avoidance over extra features.